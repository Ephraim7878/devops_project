---
- name: Deploy Flask Blog on Minikube
  hosts: local
  become: yes
  vars:
    kubeconfig_path: "{{ lookup('env', 'HOME') }}/.kube/config"

  tasks:

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    # Optional: install kubectl if not present
    # - name: Install kubectl
    #   apt:
    #     name: kubectl
    #     state: present
    #     update_cache: yes

    - name: Install Minikube
      shell: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
        sudo dpkg -i minikube_latest_amd64.deb
      args:
        creates: /usr/bin/minikube

    - name: Start Minikube if not running
      become: no
      shell: |
        if ! minikube status >/dev/null 2>&1; then
          echo "Starting Minikube..."
          minikube start --driver=docker
        else
          echo "Minikube already running."
        fi

    - name: Wait for Minikube API to be ready
      become: no
      shell: |
        until kubectl get nodes >/dev/null 2>&1; do
          echo "Waiting for Kubernetes API..."
          sleep 5
        done
      retries: 10
      delay: 5

    - name: Apply Kubernetes Deployment
      become: no
      shell: |
        kubectl apply -f {{ playbook_dir }}/../k8s/deployment.yaml --validate=false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply Kubernetes Service
      become: no
      shell: |
        kubectl apply -f {{ playbook_dir }}/../k8s/service.yaml --validate=false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
    
    - name: Display Minikube Service URL
      become: no
      shell: minikube service flask-blog-service --url
      register: service_url
      args:
        executable: /bin/bash

    - name: Show Flask app URL
      debug:
        msg: "ðŸš€ Your Flask app is available at: {{ service_url.stdout }}"
